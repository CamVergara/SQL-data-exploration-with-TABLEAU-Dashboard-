/*.
Covid 19 Data Exploration 
Skills used: Joins, CTE's, Temp Tables, Windows Functions, Aggregate Functions, Creating Views, Converting Data Types
*/

select *
from PortfolioProject..covidDeaths
where continent is not null
order by 3,4


-- Select Data that we are going to be starting with

select location, date, total_cases, new_cases, total_deaths, population
from PortfolioProject..covidDeaths
where continent is not null
order by 1,2


-- Total Cases vs Total Deaths
-- Shows likelihood of dying if you contract covid in your country


ALTER TABLE covidDeaths alter column total_deaths float;
ALTER TABLE covidDeaths alter column total_cases float;

Select Location, date, total_cases,total_deaths, (total_deaths/total_cases)*100 as DeathPercentage
From PortfolioProject..covidDeaths
where location like '%germany%'
order by 1,2


-- Total Cases vs Population
-- Shows what percentage of population infected with Covid

Select Location, date, population, total_cases, (total_cases/population)*100 as CovidPercentage
From PortfolioProject..covidDeaths
where location like '%germany%'
order by 1,2


-- Countries with Highest Infection Rate compared to Population

select location, population, MAX(total_cases) as HighestInfectionCount,  Max((total_cases/population))*100 as PercentPopulationInfected
From PortfolioProject..CovidDeaths
--Where location like '%Germany%'
Group by Location, Population
order by PercentPopulationInfected desc


-- Countries with Highest Death Count per Population

Select Location, MAX(cast(total_deaths as int)) as TotalDeathsCount
From PortfolioProject..covidDeaths
--where location like '%germany%'
where continent is not null
group by location 
order by TotalDeathsCount desc



-- BREAKING THINGS DOWN BY CONTINENT


Select location, SUM(cast(new_deaths as int)) as TotalDeathCount
From PortfolioProject..CovidDeaths
--Where location like '%states%'
Where continent is null 
and location not in ('World', 'European Union', 'International', 'Upper middle income', 'Lower middle income', 'Low income', 'high income')
Group by location
order by TotalDeathCount desc

ALTER TABLE covidDeaths alter column new_deaths int;
ALTER TABLE covidDeaths alter column new_cases int;


-- GLOBAL NUMBERS

Select sum(new_cases) as total_cases, sum(new_deaths) as total_deaths, (sum(total_deaths))/(sum(total_cases))*100 as DeathPercentage
From PortfolioProject..covidDeaths
--where location like '%germany%'
where continent is not null
--group by date
order by 1,2


-- Total Population vs Vaccinations
-- Shows Percentage of Population that has recieved at least one Covid Vaccine

select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
,	sum(convert(float, vac.new_vaccinations)) over (Partition by dea.location order by dea.location, dea.date)
as RollingPeopleVaccinated
from PortfolioProject..covidDeaths dea
join PortfolioProject..covidvaccionations$ vac
	on dea.location = vac.location
	and dea.date = vac.date
Where dea.continent is not null
--order by 2, 3


-- Using CTE to perform Calculation on Partition By in previous query

with PopvsVac (continent, location, date, population, new_vaccination, rollingpeoplevaccinated)
as
(
select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
,	sum(convert(float, vac.new_vaccinations)) over (Partition by dea.location order by dea.location, dea.date)
as RollingPeopleVaccinated
from PortfolioProject..covidDeaths dea
join PortfolioProject..covidvaccionations$ vac
	on dea.location = vac.location
	and dea.date = vac.date
Where dea.continent is not null
--order by 2, 3
)
select *, (rollingpeoplevaccinated/population)*100 as PercentageVaccinated
from PopvsVac



-- Using Temp Table to perform Calculation on Partition By in previous query

drop table if exists #PercentPopulationVaccinated
create table #PercentPopulationVaccinated
(
Continent nvarchar(255),
Location nvarchar(255),
Date datetime,
Population numeric,
New_Vaccionations numeric,
RollingPeopleVaccinated numeric
)

insert into #PercentPopulationVaccinated
select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
,	sum(convert(float, vac.new_vaccinations)) over (Partition by dea.location order by dea.location, dea.date)
as RollingPeopleVaccinated
from PortfolioProject..covidDeaths dea
join PortfolioProject..covidvaccionations$ vac
	on dea.location = vac.location
	and dea.date = vac.date
--Where dea.continent is not null
--order by 2, 3

select *, (rollingpeoplevaccinated/population)*100 as PercentageVaccinated
from #PercentPopulationVaccinated


-- Creating View to store data for later visualizations

create view PercentPopulationVaccinated as 
select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
,	sum(convert(float, vac.new_vaccinations)) over (Partition by dea.location order by dea.location, dea.date)
as RollingPeopleVaccinated
from PortfolioProject..covidDeaths dea
join PortfolioProject..covidvaccionations$ vac
	on dea.location = vac.location
	and dea.date = vac.date
Where dea.continent is not null
